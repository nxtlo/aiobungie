[tool.poetry]
name = "aiobungie"
version = "0.2.5b13"
description = "A small async api wrapper for the bungie api"
authors = ["nxtlo <dhmony-99@hotmail.com>"]
license = "MIT"
keywords = ['async', 'api', 'destiny', 'bungie']
readme = "README.md"
repository = "https://github.com/nxtlo/aiobungie"
packages = [
    {include = "aiobungie"},
    {include = "aiobungie/**/*.py"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.9"
python-dateutil = "2.8.2"
aiohttp = "3.8.1"
attrs = "21.3.0"

[tool.poetry.extras]
reformat = [
    "black==21.11b1",
    "isort==5.10.1"
]

type_check = [
    "mypy==0.910"
]

lint = [
    "flake8==4.0.1"
]

tests = [
    "pytest==6.2.5",
    "mock==4.0.3",
    "pytest-asyncio==0.16.0"
]

docs = [
    "pdoc==8.0.1"
]

clients_tests = [
    "python-dotenv==0.19.2"
]

[tool.pytest.ini_options]
xfail_strict = true
norecursedirs = "docs *.egg-info .git .nox .pytest_cache .venv venv _*"
adopts = ["--showlocals", "--ignore=tests/_raw"]

[tool.isort]
profile = "black"
force_single_line = true
skip_glob = "**/__init__.pyi"

[tool.mypy]
python_version = 3.8
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
check_untyped_defs = true

# Ignored
ignore_missing_imports = true
ignore_missing_imports_per_module = true

# Warns
warn_no_return = true
warn_return_any = true

# Disallowed
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

# Allowed
allow_redefinition = true

[tool.pyright]
include = ["aiobungie", "tests", "nix", "examples"]
venvPath = "."
venv = ".venv"
pythonVersion = "3.9"
typeCheckingMode = "strict"
reportUnboundVariable =  "none"
reportUnknownParameterType = "error"
reportUnknownLambdaType = "warning"
reportUnknownMemberType = "warning"
reportUnknownArgumentType = "warning"
reportUnknownVariableType = "warning"
reportMissingModuleSource = "error"
reportMissingParameterType = "error"
reportMissingTypeArgument = "error"
reportMissingTypeStubs = "error"
reportGeneralTypeIssues = "information"
reportPrivateUsage = "warning"
reportIncompatibleMethodOverride = "none"
# This will always cause warnings above license.
reportImportCycles = "warning"
reportUnusedImport = "warning"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"